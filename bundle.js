(()=>{"use strict";var n={774:(n,e,t)=>{t.d(e,{Z:()=>f});var r=t(537),o=t.n(r),i=t(645),a=t.n(i),s=t(667),c=t.n(s),A=new URL(t(963),t.b),l=new URL(t(359),t.b),d=a()(o()),p=c()(A),u=c()(l);d.push([n.id,`/* CSS reset */\n\n*, *::before, *::after {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font: inherit;\n}\n\nbody{\n    min-height: 100vh;\n}\n\nimg, picture, svg, video{\n    display: block;\n    max-width: 100%;\n}\n\n/* code Starts here */\n\n@font-face {\n    font-family: simpson-font;\n    src: url(${p});\n}\n\nhtml {\n    font-family: simpson-font, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\nbody { \n    background-image: url(${u});\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n   \n    -ms-overflow-style: none;  /* IE and Edge */\n    scrollbar-width: none;  /* Firefox */\n}\n\nbody::-webkit-scrollbar {\n    display: none;\n}\n\n#content {\n    min-height: 100vh;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n}\n\n#header {\n    border: 1px solid black;\n    background-color: #EBF0C1;\n    width: 100%;\n    font-size: 2.5rem;\n    text-shadow: 3px 4px 2px black;\n    color: rgb(255, 255, 255);\n    text-align: center;\n    padding: 1rem;\n}\n\n#nav-container {\n    display: flex;\n    background-color: #ebf0c1c2;\n    width: 100%;\n    border: 1px solid black;\n    padding: 1rem;\n    justify-content: center;\n    margin-bottom: 5rem;\n}\n\nnav {\n    display: flex;\n    width: 50%;\n    min-width: 300px;\n    justify-content: space-between;\n    border: 1px solid black;\n}\n\nnav a {\n    color: black;\n    text-decoration: none;\n    font-size: 1.2rem;\n    \n}\n\n#middle-container {\n    display: flex;\n    flex-direction: column;\n    padding: 3rem;\n    margin: auto;\n    border: 2px solid;\n    border-radius: 2%;\n    width: 50%;\n    min-width: 300px;\n    overflow-wrap: break-word;\n    gap: 3rem;\n    background-color: #fae1f4f2;\n}\n\n\n\n#footer {\n    margin-top: 5rem;\n    border: 1px;\n    background-color: #ebf0c1;\n    width: 100%;\n    padding: 1rem;\n}\n\n.donut-container { /*  */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n    font-style: italic;\n    gap: 1.2rem;\n    width: 100%;\n}\n\n.donut {\n    width: 6rem;\n}\n\n.donut-description {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n.donut-description>strong{\n    font-size: 1.2rem;\n    border-bottom: 1px solid black;\n}\n\n.price-list {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n    font-style: italic;\n    gap: 1.2rem;\n}\n\n\n@media only screen and (min-width: 600px) {\n    .donut-container {\n      flex-direction: row;\n    }\n}`,"",{version:3,sources:["webpack://./src/assets/style.css"],names:[],mappings:"AAAA,cAAc;;AAEd;IACI,sBAAsB;IACtB,SAAS;IACT,UAAU;IACV,aAAa;AACjB;;AAEA;IACI,iBAAiB;AACrB;;AAEA;IACI,cAAc;IACd,eAAe;AACnB;;AAEA,qBAAqB;;AAErB;IACI,yBAAyB;IACzB,4CAA6C;AACjD;;AAEA;IACI,iKAAiK;AACrK;;AAEA;IACI,yDAAqC;IACrC,4BAA4B;IAC5B,2BAA2B;IAC3B,sBAAsB;;IAEtB,wBAAwB,GAAG,gBAAgB;IAC3C,qBAAqB,GAAG,YAAY;AACxC;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,iBAAiB;IACjB,WAAW;IACX,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;;AAEvB;;AAEA;IACI,uBAAuB;IACvB,yBAAyB;IACzB,WAAW;IACX,iBAAiB;IACjB,8BAA8B;IAC9B,yBAAyB;IACzB,kBAAkB;IAClB,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,2BAA2B;IAC3B,WAAW;IACX,uBAAuB;IACvB,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,UAAU;IACV,gBAAgB;IAChB,8BAA8B;IAC9B,uBAAuB;AAC3B;;AAEA;IACI,YAAY;IACZ,qBAAqB;IACrB,iBAAiB;;AAErB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,YAAY;IACZ,iBAAiB;IACjB,iBAAiB;IACjB,UAAU;IACV,gBAAgB;IAChB,yBAAyB;IACzB,SAAS;IACT,2BAA2B;AAC/B;;;;AAIA;IACI,gBAAgB;IAChB,WAAW;IACX,yBAAyB;IACzB,WAAW;IACX,aAAa;AACjB;;AAEA,mBAAmB,KAAK;IACpB,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,wEAAwE;IACxE,kBAAkB;IAClB,WAAW;IACX,WAAW;AACf;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,WAAW;AACf;;AAEA;IACI,iBAAiB;IACjB,8BAA8B;AAClC;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,mBAAmB;IACnB,wEAAwE;IACxE,kBAAkB;IAClB,WAAW;AACf;;;AAGA;IACI;MACE,mBAAmB;IACrB;AACJ",sourcesContent:["/* CSS reset */\n\n*, *::before, *::after {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    font: inherit;\n}\n\nbody{\n    min-height: 100vh;\n}\n\nimg, picture, svg, video{\n    display: block;\n    max-width: 100%;\n}\n\n/* code Starts here */\n\n@font-face {\n    font-family: simpson-font;\n    src: url(./simpsonfont/Simpsonfont\\ DEMO.otf);\n}\n\nhtml {\n    font-family: simpson-font, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n}\n\nbody { \n    background-image: url(./bg-donut.svg);\n    background-repeat: no-repeat;\n    background-position: center;\n    background-size: cover;\n   \n    -ms-overflow-style: none;  /* IE and Edge */\n    scrollbar-width: none;  /* Firefox */\n}\n\nbody::-webkit-scrollbar {\n    display: none;\n}\n\n#content {\n    min-height: 100vh;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    \n}\n\n#header {\n    border: 1px solid black;\n    background-color: #EBF0C1;\n    width: 100%;\n    font-size: 2.5rem;\n    text-shadow: 3px 4px 2px black;\n    color: rgb(255, 255, 255);\n    text-align: center;\n    padding: 1rem;\n}\n\n#nav-container {\n    display: flex;\n    background-color: #ebf0c1c2;\n    width: 100%;\n    border: 1px solid black;\n    padding: 1rem;\n    justify-content: center;\n    margin-bottom: 5rem;\n}\n\nnav {\n    display: flex;\n    width: 50%;\n    min-width: 300px;\n    justify-content: space-between;\n    border: 1px solid black;\n}\n\nnav a {\n    color: black;\n    text-decoration: none;\n    font-size: 1.2rem;\n    \n}\n\n#middle-container {\n    display: flex;\n    flex-direction: column;\n    padding: 3rem;\n    margin: auto;\n    border: 2px solid;\n    border-radius: 2%;\n    width: 50%;\n    min-width: 300px;\n    overflow-wrap: break-word;\n    gap: 3rem;\n    background-color: #fae1f4f2;\n}\n\n\n\n#footer {\n    margin-top: 5rem;\n    border: 1px;\n    background-color: #ebf0c1;\n    width: 100%;\n    padding: 1rem;\n}\n\n.donut-container { /*  */\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n    font-style: italic;\n    gap: 1.2rem;\n    width: 100%;\n}\n\n.donut {\n    width: 6rem;\n}\n\n.donut-description {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n}\n\n.donut-description>strong{\n    font-size: 1.2rem;\n    border-bottom: 1px solid black;\n}\n\n.price-list {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;\n    font-style: italic;\n    gap: 1.2rem;\n}\n\n\n@media only screen and (min-width: 600px) {\n    .donut-container {\n      flex-direction: row;\n    }\n}"],sourceRoot:""}]);const f=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,i){"string"==typeof n&&(n=[[null,n,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var A=0;A<n.length;A++){var l=[].concat(n[A]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(o," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],s=0;s<n.length;s++){var c=n[s],A=r.base?c[0]+r.base:c[0],l=i[A]||0,d="".concat(A," ").concat(l);i[A]=l+1;var p=t(d),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=o(u,r);r.byIndex=s,e.splice(s,0,{identifier:d,updater:f,references:1})}a.push(d)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var s=t(i[a]);e[s].references--}for(var c=r(n,o),A=0;A<i.length;A++){var l=t(i[A]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},359:(n,e,t)=>{n.exports=t.p+"bg-donut.svg"},963:(n,e,t)=>{n.exports=t.p+"Simpsonfont DEMO.otf"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");if(r.length)for(var o=r.length-1;o>-1&&!n;)n=r[o--].src}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{t(359);var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(569),a=t.n(i),s=t(565),c=t.n(s),A=t(216),l=t.n(A),d=t(589),p=t.n(d),u=t(774),f={};function m(n){return m="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},m(n)}function b(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,g(r.key),r)}}function h(n,e,t){return e&&b(n.prototype,e),t&&b(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}function g(n){var e=function(n,e){if("object"!=m(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=m(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==m(e)?e:String(e)}f.styleTagTransform=p(),f.setAttributes=c(),f.insert=a().bind(null,"head"),f.domAPI=o(),f.insertStyleElement=l(),e()(u.Z,f),u.Z&&u.Z.locals&&u.Z.locals;var y=document.querySelector("#middle-container"),B=h((function n(){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n);for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];this.tags=t,this.parentElem=[],this.createParents=function(){for(var n=0;n<this.tags.length;n++){var e=this.tags[n],t=document.createElement(e);this.parentElem.push(t),y.appendChild(t)}},this.removeAll=function(){for(var n=0;0==!this.parentElem.length;n++)this.parentElem.splice(0,1),y.removeChild(y.children[0])}}));new B("p","p","p");const v=t.p+"choco-bart.svg",C=t.p+"classic-homer.svg",I=t.p+"lisa-vanilla.svg",w=t.p+"blueberry-marge.svg",x=t.p+"maggies-favorite.svg";function E(n){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n},E(n)}function k(n,e){for(var t=0;t<e.length;t++){var r=e[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(n,j(r.key),r)}}function S(n,e,t){return e&&k(n.prototype,e),t&&k(n,t),Object.defineProperty(n,"prototype",{writable:!1}),n}function j(n){var e=function(n,e){if("object"!=E(n)||!n)return n;var t=n[Symbol.toPrimitive];if(void 0!==t){var r=t.call(n,"string");if("object"!=E(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(n)}(n);return"symbol"==E(e)?e:String(e)}new B("div","div","div","div","div");var M=S((function n(e,t){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this.donutTitle=e,this.imgURl=t,this.description})),z=new M("Classic Homer",C),T=new M("Choco Bart",v),W=new M("Lisa Vanilla",I),U=new M("Blueberry Marge",w),F=new M("Maggies Favorite",x);z.description="Drenched in a luscious pink strawberry glaze and adorned with rainbow sprinkles, this delightful treat pays homage to Homer Simpson's love for all things sweet",T.description="This delectable donut is generously coated in rich, smooth chocolate icing, perfectly capturing the spirited essence of everyone's favorite troublemaker",W.description="For those with a sophisticated palate, this elegant donut is coated in smooth vanilla glaze and salted-caramel drizzle, providing a simple yet refined flavor.",U.description="A unique donut medley featuring blueberry glaze and vanilla sprinkles",F.description="A classic donut filled with luscious cream, topped with rich white-chocolate icing with a hint of raspberry flavor, and sprinkled with maggies ";var O=new B("div","div","div");!function(){O.createParents();for(var n=[],e=[],t=0;t<O.parentElem.length;t++){O.parentElem[t].classList.add("div-contact");var r=document.createElement("h3");r.classList.add("contact-header");var o=document.createElement("p");o.classList.add("contact-paragraph"),O.parentElem[t].append(r),O.parentElem[t].append(o),n.push(r),e.push(o)}}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,